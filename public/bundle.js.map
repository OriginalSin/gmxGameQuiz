{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/shared.js","../src/Map.html","../src/App.html","../src/main.js"],"sourcesContent":["function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction assignTrue(tar, src) {\n\tfor (var k in src) tar[k] = 1;\n\treturn tar;\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction callAfter(fn, i) {\n\tif (i === 0) fn();\n\treturn () => {\n\t\tif (!--i) fn();\n\t};\n}\n\nfunction addLoc(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction exclude(src, prop) {\n\tconst tar = {};\n\tfor (const k in src) k === prop || (tar[k] = src[k]);\n\treturn tar;\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations, detach) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detach);\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler) {\n\tnode.addEventListener(event, handler, false);\n}\n\nfunction removeListener(node, event, handler) {\n\tnode.removeEventListener(event, handler, false);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tnode.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tif (attributes[key] === undefined) removeAttribute(node, key);\n\t\t\telse setAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction setCustomElementData(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else if (value) {\n\t\tsetAttribute(node, prop, value);\n\t} else {\n\t\tremoveAttribute(node, prop);\n\t}\n}\n\nfunction removeAttribute(node, attribute) {\n\tnode.removeAttribute(attribute);\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setData(text, data) {\n\ttext.data = '' + data;\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction addResizeListener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggleClass(element, name, toggle) {\n\telement.classList.toggle(name, !!toggle);\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule({ a, b, delta, duration }, ease, fn) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\treturn keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro) {\n\tlet obj = fn.call(component, node, params);\n\tlet duration;\n\tlet ease;\n\tlet cssText;\n\n\tlet initialised = false;\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\n\t\trun(b, callback) {\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\ttransitionManager.wait().then(() => {\n\t\t\t\t\tobj = obj();\n\t\t\t\t\tthis._run(b, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._run(b, callback);\n\t\t\t}\n\t\t},\n\n\t\t_run(b, callback) {\n\t\t\tduration = obj.duration || 300;\n\t\t\tease = obj.easing || linear;\n\n\t\t\tconst program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tb,\n\t\t\t\tcallback: callback || noop\n\t\t\t};\n\n\t\t\tif (intro && !initialised) {\n\t\t\t\tif (obj.css && obj.delay) {\n\t\t\t\t\tcssText = node.style.cssText;\n\t\t\t\t\tnode.style.cssText += obj.css(0, 1);\n\t\t\t\t}\n\n\t\t\t\tif (obj.tick) obj.tick(0, 1);\n\t\t\t\tinitialised = true;\n\t\t\t}\n\n\t\t\tif (!b) {\n\t\t\t\tprogram.group = outros.current;\n\t\t\t\toutros.current.remaining += 1;\n\t\t\t}\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\n\t\tstart(program) {\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.start`, { node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, obj.css);\n\t\t\t\ttransitionManager.addRule(rule, program.name = '__svelte_' + hash(rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\n\t\tupdate(now) {\n\t\t\tconst program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tconst p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\t\t},\n\n\t\tdone() {\n\t\t\tconst program = this.program;\n\t\t\tthis.t = program.b;\n\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.end`, { node });\n\n\t\t\tif (!program.b && !program.invalidated) {\n\t\t\t\tprogram.group.callbacks.push(() => {\n\t\t\t\t\tprogram.callback();\n\t\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t\t});\n\n\t\t\t\tif (--program.group.remaining === 0) {\n\t\t\t\t\tprogram.group.callbacks.forEach(run);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t}\n\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\n\t\tabort(reset) {\n\t\t\tif (this.program) {\n\t\t\t\tif (reset && obj.tick) obj.tick(1, 0);\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\t\tthis.program = this.pending = null;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.invalidated = true;\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet outros = {};\n\nfunction groupOutros() {\n\toutros.current = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\tpromise: null,\n\n\tadd(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule(rule, name) {\n\t\tif (!this.stylesheet) {\n\t\t\tconst style = createElement('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\ttransitionManager.stylesheet = style.sheet;\n\t\t}\n\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule(`@keyframes ${name} ${rule}`, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext() {\n\t\tthis.running = false;\n\n\t\tconst now = window.performance.now();\n\t\tlet i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tconst transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tlet i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(anim => anim && anim.indexOf(name) === -1)\n\t\t\t.join(', ');\n\t},\n\n\twait() {\n\t\tif (!transitionManager.promise) {\n\t\t\ttransitionManager.promise = Promise.resolve();\n\t\t\ttransitionManager.promise.then(() => {\n\t\t\t\ttransitionManager.promise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn transitionManager.promise;\n\t}\n};\n\nfunction wrapAnimation(node, from, fn, params) {\n\tif (!from) return;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return;\n\n\tconst info = fn(node, { from, to }, params);\n\n\tconst duration = 'duration' in info ? info.duration : 300;\n\tconst delay = 'delay' in info ? info.delay : 0;\n\tconst ease = info.easing || linear;\n\tconst start = window.performance.now() + delay;\n\tconst end = start + duration;\n\n\tconst program = {\n\t\ta: 0,\n\t\tt: 0,\n\t\tb: 1,\n\t\tdelta: 1,\n\t\tduration,\n\t\tstart,\n\t\tend\n\t};\n\n\tconst cssText = node.style.cssText;\n\n\tconst animation = {\n\t\tpending: delay ? program : null,\n\t\tprogram: delay ? null : program,\n\t\trunning: true,\n\n\t\tstart() {\n\t\t\tif (info.css) {\n\t\t\t\tif (delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, info.css);\n\t\t\t\tprogram.name = `__svelte_${hash(rule)}`;\n\n\t\t\t\ttransitionManager.addRule(rule, program.name);\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tanimation.program = program;\n\t\t\tanimation.pending = null;\n\t\t},\n\n\t\tupdate: now => {\n\t\t\tconst p = now - program.start;\n\t\t\tconst t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (info.tick) info.tick(t, 1 - t);\n\t\t},\n\n\t\tdone() {\n\t\t\tif (info.tick) info.tick(1, 0);\n\t\t\tanimation.stop();\n\t\t},\n\n\t\tstop() {\n\t\t\tif (info.css) transitionManager.deleteRule(node, program.name);\n\t\t\tanimation.running = false;\n\t\t}\n\t};\n\n\ttransitionManager.add(animation);\n\n\tif (info.tick) info.tick(0, 1);\n\n\tif (delay) {\n\t\tif (info.css) node.style.cssText += info.css(0, 1);\n\t} else {\n\t\tanimation.start();\n\t}\n\n\treturn animation;\n}\n\nfunction fixPosition(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nfunction handlePromise(promise, info) {\n\tvar token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(info.component, child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroupOutros();\n\t\t\t\t\t\tblock.o(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tblock[block.i ? 'i' : 'm'](info.mount(), info.anchor);\n\n\t\t\tinfo.component.root.set({}); // flush any handlers that were created\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (isPromise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.d(1);\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction fixAndOutroAndDestroyBlock(block, lookup) {\n\tblock.f();\n\toutroAndDestroyBlock(block, lookup);\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar child_ctx = get_context(ctx, list, i);\n\t\tvar key = get_key(child_ctx);\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction animate(blocks, rects, fn, params) {\n\tlet i = blocks.length;\n\twhile (i--) {\n\t\tconst block = blocks[i];\n\t\tconst from = rects[block.key];\n\n\t\tif (!from) continue;\n\t\tconst to = block.node.getBoundingClientRect();\n\n\t\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) continue;\n\n\n\t}\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst invalidAttributeNameCharacter = /[\\s'\">\\/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalidAttributeNameCharacter.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, assign, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(assign(items[i], i));\n\t}\n\treturn str;\n}\n\nconst missingComponent = {\n\t_render: () => ''\n};\n\nfunction validateSsrComponent(component, name) {\n\tif (!component || !component._render) {\n\t\tif (name === 'svelte:component') name += 'this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`);\n\tconsole.log(values);\n\treturn '';\n}\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = noop;\n\n\tthis._fragment.d(detach !== false);\n\tthis._fragment = null;\n\tthis._state = {};\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\ttry {\n\t\t\t\thandler.__calling = true;\n\t\t\t\thandler.call(this, data);\n\t\t\t} finally {\n\t\t\t\thandler.__calling = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction flush(component) {\n\tcomponent._lock = true;\n\tcallAll(component._beforecreate);\n\tcallAll(component._oncreate);\n\tcallAll(component._aftercreate);\n\tcomponent._lock = false;\n}\n\nfunction get() {\n\treturn this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._slots = blankObject();\n\tcomponent._bind = options._bind;\n\tcomponent._staged = {};\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = options.store || component.root.store;\n\n\tif (!options.root) {\n\t\tcomponent._beforecreate = [];\n\t\tcomponent._oncreate = [];\n\t\tcomponent._aftercreate = [];\n\t}\n}\n\nfunction on(eventName, handler) {\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tflush(this.root);\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tnewState = assign(this._staged, newState);\n\tthis._staged = {};\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction _stage(newState) {\n\tassign(this._staged, newState);\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy,\n\tget,\n\tfire,\n\ton,\n\tset,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget,\n\tfire,\n\ton,\n\tset: setDev,\n\t_recompute: noop,\n\t_set,\n\t_stage,\n\t_mount,\n\t_differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, flush, get, init, on, set, _set, _stage, setDev, callAll, _mount, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, wrapAnimation, fixPosition, handlePromise, append, insert, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, setCustomElementData, removeAttribute, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setData, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, addResizeListener, toggleClass, destroyBlock, outroAndDestroyBlock, fixAndOutroAndDestroyBlock, updateKeyedEach, measure, animate, getSpreadUpdate, invalidAttributeNameCharacter, spread, escaped, escape, each, missingComponent, validateSsrComponent, debug, linear, generateRule, hash, wrapTransition, outros, groupOutros, transitionManager, noop, assign, assignTrue, isPromise, callAfter, addLoc, exclude, run };\n","<div id=\"map\"></div>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n<script>\r\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/';\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tlayerGame: null,\r\n\t\t\t\tquizList: null,\r\n\t\t\t\tquestions: null,\r\n\t\t\t\tpermalink: null,\r\n\t\t\t\tmap: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tstyleHook(it) {\r\n\t\t\t\tlet {question} = this.get();\r\n\t\t\t\treturn question && this.polyline && it.id === question.id ? {} : null;\r\n\t\t\t},\r\n\t\t\tgetSections(arr, layerGame) {\r\n\t\t\t\tlet attrIndexes = layerGame.getTileAttributeIndexes(),\r\n\t\t\t\t\tprops = layerGame.getGmxProperties(),\r\n\t\t\t\t\tmeta = props.MetaProperties,\r\n\t\t\t\t\tcount = meta.count ? Number(meta.count.Value) : 10,\r\n\t\t\t\t\tsections = null;\r\n\t\t\t\tif (attrIndexes.section) {\r\n\t\t\t\t\tsections = {};\r\n\t\t\t\t\tarr.forEach(function(it) {\r\n\t\t\t\t\t\tlet propsArr = it.properties,\r\n\t\t\t\t\t\t\tkey = propsArr[attrIndexes.section];\r\n\t\t\t\t\t\tsections[key] = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.allData = arr;\r\n\t\t\t\t// this.set({questions: arr.sort(Math.random).slice(0, count)});\r\n\t\t\t\tthis.set({sectionsList: sections});\r\n\t\t\t},\r\n\t\t\treBuildQuestions(sectionsList) {\r\n\t\t\t\tlet {layerGame} = this.get(),\r\n\t\t\t\t\tprops = layerGame.getGmxProperties(),\r\n\t\t\t\t\tmeta = props.MetaProperties,\r\n\t\t\t\t\tcount = meta.count ? Number(meta.count.Value) : 10,\r\n\t\t\t\t\tattrIndexes = layerGame.getTileAttributeIndexes(),\r\n\t\t\t\t\tarr = [];\r\n\t\t\t\tthis.allData.forEach(function(it) {\r\n\t\t\t\t\tlet propsArr = it.properties,\r\n\t\t\t\t\t\tkey = propsArr[attrIndexes.section];\r\n\t\t\t\t\tif (sectionsList[key]) {\r\n\t\t\t\t\t\tarr.push(it);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tarr = arr.sort(Math.random).slice(0, count);\r\n\t\t\t\tthis.set({questions: arr});\r\n// console.log('reBuildQuestions', this.allData.length, sectionsList, arr);\r\n\t\t\t},\r\n\t\t\tsetLayerGame(layerID) {\r\n\t\t\t\tlet layerGame = this.gmxMap.layersByID[layerID] ||\r\n\t\t\t\t\tthis.gmxMap.layers[Math.floor(this.gmxMap.layers.length * Math.random())];\r\n\r\n\t\t\t\tif (layerGame) {\r\n\t\t\t\t\tlet dm = layerGame.getDataManager(),\r\n\t\t\t\t\t\tprops = layerGame.getGmxProperties(),\r\n\t\t\t\t\t\t// meta = props.MetaProperties,\r\n\t\t\t\t\t\t// count = meta.count ? Number(meta.count.Value) : 10,\r\n\t\t\t\t\t\tlayerID = props.name;\r\n\t\t\t\t\tlet ob = dm.addObserver({\r\n\t\t\t\t\t\ttype: 'resend',\r\n\t\t\t\t\t\tlayerID: layerID,\r\n\t\t\t\t\t\tcallback: function (data) {\r\n\t\t\t\t\t\t\tif (data.count) {\r\n\t\t\t\t\t\t\t\tthis.getSections(data.added, layerGame);\r\n\t\t\t\t\t\t\t\tob.deactivate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t // console.log('data', data);\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlayerGame.setStyleHook(this.styleHook.bind(this));\r\n\t\t\t\t\tthis.map.addLayer(layerGame);\r\n\t\t\t\t\tlet st = localStorage.getItem('_gameQuiz_');\r\n\t\t\t\t\tlet score = st ? JSON.parse(st) : {};\r\n\t\t\t\t\tthis.set({layerGame: layerGame, score: score});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshowQuestionResult(ev) {\r\n\t\t\t\tif (this.polyline) { this.map.removeLayer(this.polyline); }\r\n\t\t\t\tlet {question} = this.get(),\r\n\t\t\t\t\tbounds = question.dataOption.bounds.toLatLngBounds(true),\r\n\t\t\t\t\tcenter = bounds.getCenter(),\r\n\t\t\t\t\tisContains = bounds.contains(this._latlng),\r\n\t\t\t\t\tpolyline = L.polyline([center, this._latlng], {color: 'red'}).addTo(this.map);\r\n\t\t\t\tthis.map.fitBounds(polyline.getBounds());\r\n\t\t\t\tlet geoJson = polyline.toGeoJSON().geometry;\r\n\r\n\t\t\t\tthis.polyline = polyline;\r\n\t\t\t\tthis.setPopupContent(geoJson, isContains);\r\n\t\t\t\t// console.log('showQuestionResult', this._latlng, question);\r\n\t\t\t},\r\n\t\t\tnextQuestion() {\r\n\t\t\t\tthis.map.closePopup();\r\n\t\t\t\tthis.map.removeLayer(this.polyline);\r\n\t\t\t\tthis.polyline = null;\r\n\t\t\t\tthis.root.nextQuestion(this.sc);\r\n\t\t\t},\r\n\t\t\tsetPopupContent(geoJson, isContains) {\r\n\t\t\t\tlet {question} = this.get();\r\n\t\t\t\tlet node = L.DomUtil.create('div', ''),\r\n\t\t\t\t\ttxt = L.DomUtil.create('div', '', node),\r\n\t\t\t\t\tbutton = L.DomUtil.create('button', '', node);\r\n\t\t\t\tif (geoJson) {\r\n\t\t\t\t\tlet len = L.gmxUtil.geoJSONGetLength(geoJson),\r\n\t\t\t\t\t\tstrLen = L.gmxUtil.getGeoJSONSummary(geoJson),\r\n\t\t\t\t\t\tresultQuestion = {},\r\n\t\t\t\t\t\tsc = 0;\r\n\t\t\t\t\tif (isContains) {\r\n\t\t\t\t\t\tsc = 10;\r\n\t\t\t\t\t\ttxt.innerHTML = 'Отлично вам начислено: <b>' + sc + '</b> баллов';\r\n\t\t\t\t\t\tresultQuestion.ok = sc + ' баллов';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttxt.innerHTML = 'Растояние от центра объекта:<br><b>' + strLen + '</b>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresultQuestion.question = question;\r\n\t\t\t\t\tresultQuestion.len = len;\r\n\t\t\t\t\tresultQuestion.strLen = strLen;\r\n\t\t\t\t\tthis.set({resultQuestion: resultQuestion});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.sc = sc;\r\n\t\t\t\t\tbutton.innerHTML = 'Следующий вопрос';\r\n\t\t\t\t\tL.DomEvent.on(button, 'click', this.nextQuestion, this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttxt.innerHTML = 'Я считаю что это здесь!';\r\n\t\t\t\t\tbutton.innerHTML = 'Показать';\r\n\t\t\t\t\tL.DomEvent.on(button, 'click', this.showQuestionResult, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.popup.setContent(node);\r\n\t\t\t\tthis.popupContent = node;\r\n\t\t\t},\r\n\t\t\tclickMap(ev) {\r\n\t\t\t\tthis.map.closePopup();\r\n\t\t\t\tthis._latlng = ev.latlng;\r\n\t\t\t\tthis.popup = L.popup()\r\n\t\t\t\t\t.setLatLng(this._latlng);\r\n\r\n\t\t\t\tthis.setPopupContent();\r\n\t\t\t\tthis.map.openPopup(this.popup);\r\n\t\t\t},\r\n\t\t\tsetQuizList() {\r\n\t\t\t},\r\n\t\t\tcreateMap(it) {\r\n\t\t\t\tlet state = it.state || {},\r\n\t\t\t\t\tmapID = it.mapID || 'A557835E1B2344479C092FBB0158B529',\r\n\t\t\t\t\tlayerID = it.layerID || '', //'5F2A707A119A45EF9BD490187E909830',\r\n\t\t\t\t\tapiKey = it.apiKey,\r\n\t\t\t\t\tpos = state.map ? state.map.position : {};\r\n\r\n\t\t\t\tvar osm = it.base == 1 ? \r\n\t\t\t\t\tL.tileLayer('//tilessputnik.ru/{z}/{x}/{y}.png', {\r\n                        attribution: '<a href=\"http://maps.sputnik.ru\">Спутник</a> © Ростелеком | © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n\t\t\t\t\t\tmaxNativeZoom: 18,\r\n\t\t\t\t\t\tmaxZoom: 21\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tL.tileLayer('https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoia29zbW9zbmlta2kiLCJhIjoiY2lvbW1tNXN0MDAwdnc4bHg5ZWw2YXJtYSJ9.ON9Ovi3fuHc5RAipmLb2EQ', {\r\n\t\t\t\t\t\tattribution: '&copy; <a href=\"//mapbox.com/\">mapbox</a>',\r\n\t\t\t\t\t\tmaxNativeZoom: 18,\r\n\t\t\t\t\t\tmaxZoom: 21\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tlet map = new L.Map('map', {\r\n\t\t\t\t\tattribution: '&copy; <a href=\"//scanex.ru/\">scanex</a>',\r\n\t\t\t\t\tallWorld: true,\r\n\t\t\t\t\tgeneralized: false,\r\n\t\t\t\t\tlayers: [osm],\r\n\t\t\t\t\tcenter: new L.LatLng(pos.y || 26, pos.x || 83),\r\n\t\t\t\t\tzoom: pos.z || 7\r\n\t\t\t\t}).on('click', this.clickMap.bind(this), this);\r\n\r\n\t\t\t\t// map.gmxControlsManager.init();\r\n\t\t\t\t\r\n\t\t\t\tlet arr = [];\r\n\t\t\t\tL.gmx.loadMap(mapID, {leafletMap: map}).then(function(gmxMap) {\r\n\t\t\t\t\tgmxMap.layers.forEach(function(it) {\r\n\t\t\t\t\t\tmap.removeLayer(it);\r\n\t\t\t\t\t\tlet props = it.getGmxProperties(),\r\n\t\t\t\t\t\t\tmeta = props.MetaProperties,\r\n\t\t\t\t\t\t\tmetaHash = {};\r\n\t\t\t\t\t\tfor(let key in meta) {\r\n\t\t\t\t\t\t\tlet val = meta[key].Value;\r\n\t\t\t\t\t\t\tmetaHash[key] = val > 0 ? Number(val) : val;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarr.push({\r\n\t\t\t\t\t\t\tgmxLayer: it,\r\n\t\t\t\t\t\t\tmetaHash: metaHash,\r\n\t\t\t\t\t\t\ttitle: props.title,\r\n\t\t\t\t\t\t\tlayerID: props.name\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tit._gameZoom = metaHash.zoom || 3;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.quizList = arr;\r\n\t\t\t\t\tthis.gmxMap = gmxMap;\r\n\t\t\t\t\tif (layerID) {\r\n\t\t\t\t\t\tthis.setLayerGame(layerID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.set({quizList: this.quizList});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// console.log('gmxMap', gmxMap);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\tthis.map = map;\r\n\t\t\t}\r\n\t\t},\r\n\t\toncreate() {\r\n\t\t\tlet {urlParams} = this.get();\r\n\t\t\tthis.createMap(urlParams);\r\n\t\t},\r\n\r\n\t\tonstate({ changed, current, previous }) {\r\n\t\t\t// console.log('in onstate', this);\r\n\t\t\tif (changed.selectQuiz && current.selectQuiz) {\r\n\t\t\t\tthis.map.closePopup();\r\n\t\t\t\tif (this.polyline) { this.map.removeLayer(this.polyline); this.polyline = null; }\r\n\t\t\t\tthis.set({quizList: this.quizList});\r\n\t\t\t} else if (changed.layerID && current.layerID) {\r\n\t\t\t\tthis.setLayerGame(current.layerID);\r\n\t\t\t} else if (changed.question && current.question) {\r\n\t\t\t\tlet {layerGame} = this.get();\r\n\t\t\t\tthis.map.closePopup();\r\n\t\t\t\tif (this.polyline) { this.map.removeLayer(this.polyline); this.polyline = null; }\r\n\t\t\t\tthis.map.setZoom(layerGame._gameZoom);\r\n\t\t\t} else if (changed.sectionsList && current.sectionsList) {\r\n\t\t\t\tthis.reBuildQuestions(current.sectionsList);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n","<Map urlParams={urlParams}\r\n\tbind:selectQuiz\r\n\tbind:sectionsList\r\n\tbind:quizList\r\n\tbind:layerID\r\n\tbind:layerGame\r\n\tbind:score\r\n\tbind:questions\r\n\tbind:question\r\n\tbind:resultQuestion\r\n/>\r\n{#if question}\r\n\t<div class=\"question\">\r\n\t\t{question ? question.properties[1] : ''}\r\n\t\t{#if resultQuestion}\r\n\t\t\t<hr />\r\n\t\t\t<div class=\"question-result\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t{#each currentScore as it}\r\n\t\t\t\t\t<li>{it.question.properties[1]}: <b>{it.strLen}</b></li>\r\n\t\t\t\t{/each}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<hr />\r\n\t\t\t\tОбщий результат: {currentItog}\r\n\t\t\t</div>\r\n\t\t\t<br>\r\n\t\t\t<button class=\"start\" on:click=\"nextQuestion()\">Продолжить</button>\r\n\t\t\t<button class=\"start\" on:click=\"set({question: false})\">Выбрать игру</button>\r\n\t\t{/if}\r\n\t</div>\r\n{:else}\r\n\t<div class=\"scrim\"></div>\r\n\t<div class=\"controls\">\r\n\t{#if quizList}\r\n\t\t<h1 class=\"title\">Выбрать игру</h1>\r\n\t\t<ul class=\"selectQuiz\">\r\n\t\t{#each quizList as it}\r\n\t\t\t<li on:click=\"set({layerID: it.layerID, selectQuiz: false, quizList: false})\">{it.title}</li>\r\n\t\t{/each}\r\n\t\t</ul>\r\n\t{:elseif !layerGame}\r\n\t\t<div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n\t{:else}\r\n\t\t<h1 class=\"title\">{props.title}</h1>\r\n\t\t<p class=\"description\">{props.description}</p>\r\n\t\t{#if sectionsList}\r\n\t\t\t<h1 class=\"title\">Выбор рубрик</h1>\r\n\t\t\t<ul class=\"selectSectionsList\">\r\n\t\t\t{#each Object.keys(sectionsList) as it}\r\n\t\t\t\t<li><input on:change=\"checkSection(it, this.checked)\" type=\"checkbox\" checked/>{it}</li>\r\n\t\t\t{/each}\r\n\t\t\t</ul>\r\n\t\t{/if}\r\n\r\n\t\t<button class=\"start\" disabled=\"{isSectionsEmpty}\" on:click=\"start()\">Начать</button>\r\n\t\t{#if !sectionsList}\r\n\t\t\t<button class=\"start\" on:click=\"set({selectQuiz: true})\">Выбрать другую игру</button>\r\n\t\t{/if}\r\n\t\t{#if props.MetaProperties.video && props.MetaProperties.video.Value}\r\n\t\t\t<div><iframe title=\"video\" width=\"100%\" height=\"315\" src=\"{props.MetaProperties.video.Value}\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe></div>\r\n\t\t{/if}\r\n\t\t{#if score[props.name]}\r\n\t\t\t<ul>\r\n\t\t\t{#each score[props.name] as it}\r\n\t\t\t<li>{it} баллов</li>\r\n\t\t\t{/each}\r\n\t\t\t</ul>\r\n\t\t{/if}\r\n\t{/if}\r\n\t</div>\r\n{/if}\r\n\r\n<script>\r\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/';\r\n\timport Map from './Map.html';\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\turlParams: {},\r\n\t\t\t\tquizList: null,\r\n\t\t\t\tselectQuiz: null,\r\n\t\t\t\tprops: {},\r\n\t\t\t\tcurrentScore: [],\r\n\t\t\t\tscore: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tprops: ({ layerGame }) => layerGame ? layerGame.getGmxProperties() : {},\r\n\t\t\tcurrentItog: ({ currentScore }) => L.gmxUtil.prettifyDistance(currentScore.reduce((p, c) => p + c.len, 0)),\r\n\t\t\tisSectionsEmpty: ({ sectionsList }) => {\r\n\t\t\t\tlet res = false;\r\n\t\t\t\tif (sectionsList) {\r\n\t\t\t\t\tres = true;\r\n\t\t\t\t\tfor(let key in sectionsList) {\r\n\t\t\t\t\t\tif (sectionsList[key]) { res = false; break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tcheckSection(key, flag) {\r\n\t\t\t\t// console.log('checkSection', key, flag);\r\n\t\t\t\tlet {sectionsList} = this.get();\r\n\t\t\t\tsectionsList[key] = flag;\r\n\t\t\t\tthis.set({sectionsList: sectionsList});\r\n\t\t\t},\r\n\t\t\tstart() {\r\n\t\t\t\tthis.nextQuestion(0, true);\r\n\t\t\t},\r\n\t\t\tnextQuestion(sc, clearCurrentScore) {\r\n\t\t\t\tlet {questions, props, score, currentScore} = this.get(),\r\n\t\t\t\t\tquestion = questions.shift();\r\n\t\t\t\tthis.sc = this.sc || 0;\r\n\t\t\t\tthis.sc += (sc || 0);\r\n\t\t\t\tif (!question) {\r\n\t\t\t\t\tscore = score || {};\r\n\t\t\t\t\tlet id = props.name,\r\n\t\t\t\t\t\tarr = score[id] || [];\r\n\t\t\t\t\tarr.push(this.sc);\r\n\t\t\t\t\tlet len = arr.length;\r\n\t\t\t\t\tscore[id] = arr.slice(len - 5, len);\r\n\t\t\t\t\twindow.localStorage.setItem('_gameQuiz_', JSON.stringify(score));\r\n\t\t\t\t}\r\n\t\t\t\tif (clearCurrentScore) { currentScore = []; }\r\n\t\t\t\tthis.set({questions: questions, question: question, resultQuestion: false, currentScore: currentScore});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcomponents: {\r\n\t\t\tMap\r\n\t\t},\r\n\r\n\t\tonstate({ changed, current, previous }) {\r\n\t\t\t// console.log('in onstate', this);\r\n\t\t\tif (changed.resultQuestion && current.resultQuestion) {\r\n\t\t\t\tlet {currentScore} = this.get();\r\n\t\t\t\tcurrentScore.push(current.resultQuestion);\r\n\t\t\t\tthis.set({currentScore: currentScore});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n.question {\r\n\tposition: absolute;\r\n    margin: 10px;\r\n    right: 0;\r\n    top: 0;\r\n\tz-index: 1000;\r\n\tbackground-color: #ffffff;\r\n\tpadding: 13px;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 0 1px 7px rgba(0,0,0,0.65);\r\n\tfont-weight: bold;\r\n}\r\n.question li {\r\n\tfont-weight: initial;\r\n    list-style-type: decimal;\r\n}\r\n.controls {\r\n\tposition: absolute;\r\n    margin: 80px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n\tz-index: 1000;\r\n\tbackground-color: #ffffff;\r\n\tpadding: 13px;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 0 1px 7px rgba(0,0,0,0.65);\r\n}\r\n\r\n.selectQuiz {\r\n\tcursor: pointer;\r\n}\r\n.selectSectionsList {\r\n\tlist-style: none;\r\n}\r\n\r\n.scrim {\r\n  position: fixed;\r\n  z-index: 1000;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n}\r\n.lds-ellipsis {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 64px;\r\n  height: 47px;\r\n}\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 20px;\r\n  width: 11px;\r\n  height: 11px;\r\n  border-radius: 50%;\r\n  background: #70cbe0;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: 6px;\r\n  animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: 6px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 26px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 45px;\r\n  animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(19px, 0);\r\n  }\r\n}\r\n\r\n</style>\r\n","import App from './App.html';\r\n\r\nlet pars = (() => {\r\n\tlet p = {};\r\n\tlocation.search.substr(1).split('&').forEach((it) => {\r\n\t\tlet arr = it.split('=');\r\n\t\tp[arr[0]] = arr[1];\r\n\t});\r\n\treturn p;\r\n})();\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\t//target: document.getElementsByClassName('editor-sidebarContainer')[0] || document.body,\r\n\tdata: {\r\n\t\turlParams: pars,\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","assignTrue","run","fn","append","target","node","appendChild","insert","anchor","insertBefore","detachNode","parentNode","removeChild","destroyEach","iterations","detach","i","length","d","createElement","name","document","createText","data","createTextNode","createComment","addListener","event","handler","addEventListener","removeListener","removeEventListener","setAttribute","attribute","value","setData","text","blankObject","Object","create","flush","component","_lock","callAll","_beforecreate","_oncreate","_aftercreate","init","options","_handlers","_slots","_bind","_staged","root","store","fns","shift","proto","destroy","this","fire","set","_fragment","_state","get","eventName","handlers","slice","__calling","call","on","push","cancel","index","indexOf","splice","newState","_set","_recompute","oldState","changed","dirty","key","_differs","current","previous","p","_stage","_mount","a","b","window","serverBase","[object Object]","it","question","polyline","id","arr","layerGame","attrIndexes","getTileAttributeIndexes","meta","getGmxProperties","MetaProperties","sections","count","Number","Value","section","forEach","properties","allData","sectionsList","sort","Math","random","questions","layerID","gmxMap","layersByID","layers","floor","dm","getDataManager","ob","addObserver","type","callback","getSections","added","deactivate","bind","setStyleHook","styleHook","map","addLayer","st","localStorage","getItem","score","JSON","parse","ev","removeLayer","bounds","dataOption","toLatLngBounds","center","getCenter","isContains","contains","_latlng","L","color","addTo","fitBounds","getBounds","geoJson","toGeoJSON","geometry","setPopupContent","closePopup","nextQuestion","sc","DomUtil","txt","button","len","gmxUtil","geoJSONGetLength","strLen","getGeoJSONSummary","resultQuestion","innerHTML","ok","DomEvent","showQuestionResult","popup","setContent","popupContent","latlng","setLatLng","openPopup","state","mapID","pos","apiKey","position","osm","base","tileLayer","attribution","maxNativeZoom","maxZoom","Map","allWorld","generalized","LatLng","y","x","zoom","z","clickMap","gmx","loadMap","leafletMap","then","props","metaHash","val","gmxLayer","title","_gameZoom","quizList","setLayerGame","selectQuiz","setZoom","reBuildQuestions","permalink","urlParams","createMap","flag","clearCurrentScore","currentScore","setItem","stringify","currentItog","keys","video","description","start","isSectionsEmpty","checkSection","checked","prettifyDistance","reduce","c","res","pars","location","search","substr","split","App","body"],"mappings":"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"}